8
pt(2.5, df = 15, lower.tail = FALSE)
qnorm(0.95)
qnorm(0.99)
pnorm(2)
pnorm(2, lower.tail = FALSE)
mybin
pbinom(6, size = 8, prob = .5, lower.tail = FALSE)
pbinom(7, size = 8, prob = .5, lower.tail = TRUE)
ppois(9, lambda = 5, lower.tail = FALSE)
getwd()
setwd("~/Desktop/Coursera/StatisticalInference")
library(datasets)
library(ggplot2)
summary(ToothGrowth)
library(datasets)
summary(ToothGrowth)
library(ggplot2)
qplot(supp, len, data = ToothGrowth, geom = "boxplot", fill = supp) # Explore len by supp
qplot(dose, len, data = ToothGrowth, facets = . ~ dose, geom = "boxplot") # Explore len by dose
qplot(supp, len, data = ToothGrowth, geom = "boxplot", fill = supp) # Explore len by supp
?labs
?qplot
qplot(supp, len, data = ToothGrowth, geom = "boxplot", fill = supp, main = "Tooth Growth by Different Supp")
qplot(dose, len, data = ToothGrowth, facets = . ~ dose, geom = "boxplot", main = "Tooth Growth by Different Dose")
qplot(len ~ dose, data = ToothGrowth, facets = . ~ dose, geom = "boxplot", main = "Tooth Growth by Different Dose")
?qplot
g <- ggplot(ToothGrowth, aes = c(ToothGrowth$len, ToothGrowth$dose))
?geom
?ggplot
g <- g + geom_histogram()
g
g <- ggplot(ToothGrowth, aes(y = ToothGrowth$len,x = ToothGrowth$dose))
g + geom_histogram()
?geom_boxplot
g + geom_boxplot()
?geom_boxplot
?geom_line
g + geom_line()
?geom_bar
g + geom_bar()
?class
?class(ToothGrowth$supp)
class(ToothGrowth$supp)
class(ToothGrowth$dose)
g <- ggplot(ToothGrowth, aes(y = ToothGrowth$len,x = as.factor(ToothGrowth$dose)))
g + geom_boxplot()
?labs
g + geom_boxplot() + labs(title = "Tooth Growth by Different Dose", xlab = "dose", ylab = "len")
?labs
g <- g + geom_boxplot() + labs(title = "Tooth Growth by Different Dose", x = "dose", y = "len")
g
?geom_aes
?geom_fill
?geom_boxplot
?ggplot
g + geom_boxplot() + labs(title = "Tooth Growth by Different Dose", x = "dose", y = "len")
g + geom_boxplot(fill = dose) + labs(title = "Tooth Growth by Different Dose", x = "dose", y = "len")
g + geom_boxplot(colour = "red") + labs(title = "Tooth Growth by Different Dose", x = "dose", y = "len")
g + geom_boxplot() + labs(title = "Tooth Growth by Different Dose", x = "dose", y = "len")
g <- ggplot(ToothGrowth, aes(y = ToothGrowth$len,x = as.factor(ToothGrowth$dose), fill = as.factor(ToothGrowth$dose)))
g <- g + geom_boxplot() + labs(title = "Tooth Growth by Different Dose", x = "dose", y = "len")
g
len <- ToothGrowth$len
dose <- as.factor(ToothGrowth$dose)
g <- ggplot(data.frame(len, dose), aes(y = len,x = dose), fill = dose)))
g <- g + geom_boxplot() + labs(title = "Tooth Growth by Different Dose", x = "dose", y = "len")
g
data.frame(len, dose)
g <- ggplot(data.frame(len, dose), aes(y = len,x = dose, fill = dose)))
g <- ggplot(data.frame(len, dose), aes(y = len,x = dose, fill = dose))
g <- ggplot(data.frame(len, dose), aes(y = len,x = dose, fill = dose))
g <- g + geom_boxplot() + labs(title = "Tooth Growth by Different Dose", x = "dose", y = "len")
g
qplot(supp, len, data = ToothGrowth, geom = "boxplot", fill = supp, main = "Tooth Growth by Different Supp")
source("BuildPDF.R")
str(t.test)
summary(t.test)
CI <- mOJ - mVC + c(-1,1) * qt(0.975, df) * sqrt(sdOJ^2/nOJ + sdVC^2/nVC)
mOJ <- mean(OJ); mVC <- mean(VC)
sdOJ <- sqrt(var(OJ)); sdVC <- sqrt(var(VC))
nOJ <- length(OJ); nVC <- length(VC)
# T-test for supp
# OJ = VC, unequal variance
#Confidence Interval
df <- (sdOJ^2/nOJ + sdVC^2/nVC)^2/((sdOJ^2/30)^2/(30-1) + (sdVC^2/30)^2/(30-1))
CI <- mOJ - mVC + c(-1,1) * qt(0.975, df) * sqrt(sdOJ^2/nOJ + sdVC^2/nVC)
t.test(OJ, VC, paired = FALSE, var.equal = FALSE)
library(datasets)
OJ <- ToothGrowth$len[1:30]
VC <- ToothGrowth$len[31:60]
mOJ <- mean(OJ); mVC <- mean(VC)
sdOJ <- sqrt(var(OJ)); sdVC <- sqrt(var(VC))
nOJ <- length(OJ); nVC <- length(VC)
# T-test for supp
# OJ = VC, unequal variance
#Confidence Interval
df <- (sdOJ^2/nOJ + sdVC^2/nVC)^2/((sdOJ^2/30)^2/(30-1) + (sdVC^2/30)^2/(30-1))
CI <- mOJ - mVC + c(-1,1) * qt(0.975, df) * sqrt(sdOJ^2/nOJ + sdVC^2/nVC)
t.test(OJ, VC, paired = FALSE, var.equal = FALSE)
CI
mOJ
mVC
head(ToothGrowth)
VC <- ToothGrowth$len[11:30]
OJ <- ToothGrowth$len[31:60]
mOJ <- mean(OJ); mVC <- mean(VC)
sdOJ <- sqrt(var(OJ)); sdVC <- sqrt(var(VC))
nOJ <- length(OJ); nVC <- length(VC)
# T-test for supp
# OJ = VC, unequal variance
#Confidence Interval
df <- (sdOJ^2/nOJ + sdVC^2/nVC)^2/((sdOJ^2/30)^2/(30-1) + (sdVC^2/30)^2/(30-1))
CI <- mOJ - mVC + c(-1,1) * qt(0.975, df) * sqrt(sdOJ^2/nOJ + sdVC^2/nVC)
t.test(OJ, VC, paired = FALSE, var.equal = FALSE)
CI
mOJ
mVC
VC <- ToothGrowth$len[1:30]
OJ <- ToothGrowth$len[31:60]
mOJ <- mean(OJ); mVC <- mean(VC)
sdOJ <- sqrt(var(OJ)); sdVC <- sqrt(var(VC))
nOJ <- length(OJ); nVC <- length(VC)
# T-test for supp
# OJ = VC, unequal variance
#Confidence Interval
df <- (sdOJ^2/nOJ + sdVC^2/nVC)^2/((sdOJ^2/30)^2/(30-1) + (sdVC^2/30)^2/(30-1))
CI <- mOJ - mVC + c(-1,1) * qt(0.975, df) * sqrt(sdOJ^2/nOJ + sdVC^2/nVC)
t.test(OJ, VC, paired = FALSE, var.equal = FALSE)
mOJ
mVC
Dose12 <- subset(ToothGrowth, dose %in% c(0.5,1))
head(Dose12)
t.test(len ~ dose, paired = FALSE, var.equal = TRUE)
t.test(len ~ dose, paired = FALSE, var.equal = TRUE, data = Dose12)
mean <- with(ToothGrowth, tapply(len, dose, mean))
var <- with(ToothGrowth, tapply(len, dose, var))
n <- with(ToothGrowth, tapply(len, dose, length))
ToothGrowth2 <- ToothGrowth[order(ToothGrowth$dose), ]
d1 <- ToothGrowth2$len[1:20]; d2 <- ToothGrowth2$len[21:40]; d3 <- ToothGrowth2$len[41:60];
m1 <- as.vector(mean[1]); m2 <- as.vector(mean[2]); m3 <- as.vector(mean[3])
sd1 <- as.vector(sqrt(var[1])); sd2 <- as.vector(sqrt(var[2])); sd3 <- as.vector(sqrt(var[3]));
n1 <- as.vector(n[1]); n2 <- as.vector(n[2]); n3 <- as.vector(n[3]);
# T-test for dose
# dose0.5 = dose1, equal variance
# Confidence Interval
Sp2 <- ((n1-1)*sd1^2 + (n2-1)*sd2^2)/(n1+n2-2)
CI <- m1 - m2 + c(-1,1)*qt(0.975, n1+n2-2)*sqrt(Sp2*(1/n1 + 1/n2))
t.test(d1, d2, paired = FALSE, var.equal = TRUE)
Dose13 <- subset(ToothGrowth, dose %in% c(0.5,2))
t.test(len ~ dose, paired = FALSE, var.equal = TRUE, data = Dose13)
Sp2 <- ((n1-1)*sd1^2 + (n2-1)*sd2^2)/(n1+n2-2)
CI <- m1 - m2 + c(-1,1)*qt(0.975, n1+n2-2)*sqrt(Sp2*(1/n1 + 1/n2))
Dose12 <- subset(ToothGrowth, dose %in% c(0.5,1))
t.test(len ~ dose, paired = FALSE, var.equal = TRUE, data = Dose12)
# dose0.5 = dose2, unequal variance
df <- (sd1^2/n1 + sd3^2/n3)^2/((sd1^2/n1)^2/(n1-1) + (sd3^2/n3)^2/(n3-1))
CI <- m1 - m3 + c(-1,1) * qt(0.975, df) * sqrt(sd1^2/n1 + sd3^2/n3)
CI
Dose13 <- subset(ToothGrowth, dose %in% c(0.5,2))
t.test(len ~ dose, paired = FALSE, var.equal = FALSE, data = Dose13)
df <- (sd2^2/n2 + sd3^2/n3)^2/((sd2^2/n2)^2/(n2-1) + (sd3^2/n3)^2/(n3-1))
CI <- m2 - m3 + c(-1,1) * qt(0.975, df) * sqrt(sd2^2/n1 + sd3^2/n3)
Dose23 <- subset(ToothGrowth, dose %in% c(1,2))
t.test(len ~ dose, paired = FALSE, var.equal = FALSE, data = Dose23)
library(datasets)
Dose12 <- subset(ToothGrowth, dose %in% c(0.5,1))
t.test(len ~ dose, paired = FALSE, var.equal = TRUE, data = Dose12)
pt(-6.4766, 38)
t.test(len ~ dose, paired = FALSE, var.equal = FALSE, data = Dose13)
t.test(len ~ dose, paired = FALSE, var.equal = FALSE, data = Dose23)
source("BuildPDF.R")
source("BuildPDF.R")
source("BuildPDF.R")
source("BuildPDF.R")
source("BuildPDF.R")
source("BuildPDF.R")
source("BuildPDF.R")
source("BuildPDF.R")
source("BuildPDF.R")
source("BuildPDF.R")
?opts_chunk
?opts_chunk$set
source("BuildPDF.R")
source("BuildPDF.R")
source("BuildPDF.R")
source("BuildPDF.R")
source("BuildPDF.R")
source("BuildPDF.R")
source("BuildPDF.R")
source("BuildPDF.R")
source("BuildPDF.R")
source("BuildPDF.R")
source("BuildPDF.R")
source("BuildPDF.R")
source("BuildPDF.R")
source("BuildPDF.R")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
# Set working directory
setwd("~/Desktop/Coursera/StatisticalInference")
# Load packages
require(knitr)
require(markdown)
# Create .md, .html, and .pdf files
knit("ProjectReport_Simulation.Rmd")
markdownToHTML('ProjectReport_Simulation.md', 'ProjectReport_Simulation.html', options=c("use_xhml"))
system("pandoc -V geometry:margin=1in -s ProjectReport_Simulation.md -o ProjectReport_Simulation.pdf")
