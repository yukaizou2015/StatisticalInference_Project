library(lattice)
library(datasets)
xyplot(Ozone ~ Wind, data = airquality)
airquality <- transform(airquality, Month = factor(month))
airquality <- transform(airquality, Month = factor(Month))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5,1))
install.packages("ggplot2")
library(ggplot2\)
library(ggplot2)
qplot()
library("ggplot2")
library(ggplot)
library(ggplot2)
str(mpg)
install.packages('ggplot2', dep = TRUE)
install.packages('proto')
library(ggplot2)
library(ggplot2)
g <- ggplot(maacs, aes(logpm25, NocturnalSympt))
g + geom_point()
g + geom_point()
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth(method = "lm")
g + geom_point() + facet_grid(. ~ bmicat)
g + geom_point() + facet_grid(. ~ bmicat) + geom_smooth(method = "lm")
?ggplot
?cut
cutpoints <- quantile(maacs$logno2_new, seq(0, 1, length = 4), na.rm = TRUE)
seq(0, 1, length = 4)
?na.rm
??na.rm
?quantile
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?trellis.par.set
print.trellis
?print.trellis
library(datasets)
data(airquality)
airquality
airquality = transform(airquality, Month = factor(Month))
airquality
names(airquality)
airquality = transform(airquality, Day = factor(Day))
airquality
?lpoints
?transform
install.packages("KernSmooth")
KernSmooth
library(KernSmooth)
library(swirl)
swirl()
install_from_swirl("Statistical Inference")
swirl()
install.packages("knitr")
library(knitr)
library("knitr")
knitr
?knitr
??knitr
?knitrSet
swirl()
library(swirl)
swirl()
1-(2+1)/36
deck
52
4/52
0
12/52
2/51
0.64
0.64
mypdf
?integrate
integrate(mypdf, 0, 1)
integrate(mypdf, 0, 1.6)
sqrt(2)
swirl()
swirl()
library(swirl)
swirl()
swirl()
swirl()
pnorm(0.95)
qnorm(0.95)
qt(0.95, 15)
qt(0.95, 35)
qt(0.95, 350)
qt(0.95, 2)
qt(0.975,15)
qt(0.025,15)
choose(8, 7)
choose(8, 7) * 0.5^7
choose(8, 8) * 0.5^8
choose(8, 7) * 0.5^8
choose(8, 7) * 0.5^8 + choose(8, 1) * 0.5^8
choose(8, 7) * 0.5^8 + choose(8, 8) * 0.5^8
choose(8, 6) * 0.5^8 + choose(8, 7) * 0.5^8 + choose(8, 8) * 0.5^8
pt(2.5, 15)
pt(2.5, 15, lower.tail = FALSE)
qnorm(0.95)
pnorm(2)
choose(8, 7) * 0.5^8 + choose(8, 8) * 0.5^8
pbinom(6, size = 8, prob = 0.5, lower.tail = FALSE)
ppois(9, 5, lower.tail = 5)
ppois(9, 5, lower.tail = FALSE)
ppois(9, 5)
ppois(9, 5. lower.tail = FALSE)
ppois(9, 5, lower.tail = FALSE)
qt(0.975, 9-1)
1100 * c(-1,1) * qt(0.975, 9-1) * 30/sqrt(9)
1100 + c(-1,1) * qt(0.975, 9-1) * 30/sqrt(9)
2 * 3 / qt(0.975, 8)
?t.test
t.test(3, 5, paired = FALSE, var.equal = FALSE)$conf
qt(0.975, 18)
Y <- 3
X <- 5
Sy <- 0.60
Sx <- 0.68
df <- (Sx^2/nx + Sy^2/ny)^2/((Sx^2/nx)^2/(nx-1) + (Sy^2/ny)^2/(ny-1))
TCI <- Y-X + c(-1,1) * qt(0.975, df) * sqrt(Sx^2/nx + Sy^2/ny)
df
df <- (Sx^2/nx + Sy^2/ny)^2/((Sx^2/nx)^2/(nx-1) + (Sy^2/ny)^2/(ny-1))
Y <- 3
X <- 5
nx <- 10
ny <- 10
Sy <- 0.60
Sx <- 0.68
df <- (Sx^2/nx + Sy^2/ny)^2/((Sx^2/nx)^2/(nx-1) + (Sy^2/ny)^2/(ny-1))
TCI <- Y-X + c(-1,1) * qt(0.975, df) * sqrt(Sx^2/nx + Sy^2/ny)
TCI
df
Y <- 3
X <- 5
nx <- 10
ny <- 10
Sy <- 0.60
Sx <- 0.68
df <- (Sx^2/nx + Sy^2/ny)^2/((Sx^2/nx)^2/(nx-1) + (Sy^2/ny)^2/(ny-1))
TCI <- Y-X + c(-1,1) * qt(0.975, 18) * sqrt(Sx^2/nx + Sy^2/ny)
TCI
Y <- 3; Sy <- 0.60
X <- 5; Sx <- 0.68
nx <- 10
ny <- 10
df <- 18
Sp <- ((nx-1)*Sx^2 + (ny-1)*Sy^2)/(nx + ny - 2)
TCI <- Y-X + c(-1,1) * qt(0.975, df) * Sp * sqrt(1/nx + 1/ny)
TCI
Y <- 3; Sy <- 0.60
X <- 5; Sx <- 0.68
nx <- 10
ny <- 10
df <- 18
Sp <- sqrt(((nx-1)*Sx^2 + (ny-1)*Sy^2)/(nx + ny - 2))
TCI <- Y-X + c(-1,1) * qt(0.975, df) * Sp * sqrt(1/nx + 1/ny)
TCI
sp <- sqrt((9 * 0.60^2 + 9 * 0.68^2) / (10 + 10 - 2))
3 - 5 + c(-1,1) * qt(0.975, 18) * sp * sqrt(1/10 + 1/10)
sp <- sqrt((9 * 0.60 + 9 * 0.68) / (10 + 10 - 2))
3 - 5 + c(-1,1) * qt(0.975, 18) * sp * sqrt(1/10 + 1/10)
sp <- sqrt((-3 * 1.5^2 + 1 * 1.8^2) / (9 + 9 - 2))
-3 - 1 + c(-1,1) * qt(0.95, 16) * sp * sqrt(1/9 + 1/9)
sp <- sqrt((9 * 1.5^2 + 9 * 1.8^2) / (9 + 9 - 2))
-3 - 1 + c(-1,1) * qt(0.95, 16) * sp * sqrt(1/9 + 1/9)
sp <- sqrt((8 * 1.5^2 + 8 * 1.8^2) / (9 + 9 - 2))
-3 - 1 + c(-1,1) * qt(0.95, 16) * sp * sqrt(1/9 + 1/9)
z <- (4 - 6)/(2/sqrt(100))
X <- 6; Sx <- 2
Y <- 4; Sy <- 0.5
nx <- 100; ny <- 100
X - Y + c(-1,1) * z * sqrt(Sx^2/nx + Sy^2/ny)
z <- (4 - 6)/(2/sqrt(100))
X <- 6; Sx <- 2
Y <- 4; Sy <- 0.5
nx <- 100; ny <- 100
Y - X + c(-1,1) * z * sqrt(Sx^2/nx + Sy^2/ny)
z <- (4 - 6)/(2/sqrt(100))
X <- 6; Sx <- 2
Y <- 4; Sy <- 0.5
nx <- 100; ny <- 100
X - Y + c(-1,1) * z * sqrt(Sx^2/nx + Sy^2/ny)
z
(4-6)/(2/sqrt(100))
2/sqrt(100)
z <- (6 - 4)/(0.5/sqrt(100))
X <- 6; Sx <- 2
Y <- 4; Sy <- 0.5
nx <- 100; ny <- 100
X - Y + c(-1,1) * z * sqrt(Sx^2/nx + Sy^2/ny)
z
?qz
z <- (4 - 6)/(2/sqrt(100))
X <- 6; Sx <- 2
Y <- 4; Sy <- 0.5
nx <- 100; ny <- 100
X - Y + c(-1,1) * z * sqrt(Sx^2/nx + Sy^2/ny)
qnorm(0.95)
qnorm(0.95, lower.tail = FALSE)
z <- (6 - 4)/(0.5/sqrt(100))
X <- 6; Sx <- 2
Y <- 4; Sy <- 0.5
nx <- 100; ny <- 100
X - Y + c(-1,1) * z * sqrt(Sx^2/nx + Sy^2/ny)
X <- 6; Sx <- 2
Y <- 4; Sy <- 0.5
nx <- 100; ny <- 100
df <- (Sx^2/nx + Sy^2/ny)^2/((Sx^2/nx)^2/(nx-1) + (Sy^2/ny)^2/(ny-1))
X - Y + c(-1,1) * qt(0.975, df) * sqrt(Sx^2/nx + Sy^2/ny)
(4 - 6)/(2/sqrt(100))
pnorm(0.93, mean = 100, sd = 10)
qnorm(0.93, mean = 100, sd = 10)
pnorm(2)
(93 - 100)/10
pnorm(-0.7)
(0.88 * 0.95)/(0.88 * 0.95 + 0.07 * 0.05)
qnorm(0.95, mean = 100, sd = 10)
qnorm(0.95, mean = 100, sd = 10/sqrt(50))
choose(6, 5)
choose(6, 5) * 0.5^6 + choose(6, 6) * 0.5^6
qunif(0.51, mean = 0.5, sd = sqrt(1/(12*100)))
punif(0.51, mean = 0.5, sd = sqrt(1/(12*100)))
?qunit
?qunif
qnorm(0.51, mean = 0.5, sd = sqrt(1/(12*100)))
qnorm(0.51, mean = 0.5, sd = 12/100)
qnorm(0.51, mean = 0.5, sd = 1/1200)
1 - qnorm(0.51, mean = 0.5, sd = 1/1200)
1 - qnorm(0.51, mean = 0.5, sd = sqrt(1/1200))
qnorm(0.51, mean = 0.5, sd = 1/sqrt(12*100))
qnorm(0.51, mean = 0.5, sd = 1/sqrt(12*100), lower.tail = FALSE)
pnorm(0.51, mean = 0.5, sd = 1/sqrt(12*100), lower.tail = FALSE)
pnorm(2)
die
(1+4+9+16+25+36)*1/6
(1+4+9+16+25+36)*1/6 - 3.5^2
(1+4+9+16+25+36)*1/6 - 3.5^2
ans
var <- (1+4+9+16+25+36)*1/6 - 3.5^2
var/10
ppois(20, lambda = 16.5 * 2)
library(swirl)
swirl()
alpha = 0.05
z = qnorm(1 - alpha)
z
mu0 = 30
mua = 32
sigma = 4
n = 16
pnorm(mu0 + z * sigma/sqrt(n), mean = mu9, sd = sigma/sqrt(n), lower.tail = FALSE)
pnorm(mu0 + z * sigma/sqrt(n), mean = mu0, sd = sigma/sqrt(n), lower.tail = FALSE)
pnorm(mu0 + z * sigma/sqrt(n), mean = mua, sd = sigma/sqrt(n), lower.tail = FALSE)
power.t.test(n = 16, delta = 2, sd = 4, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 2/4, sd = 1, type = "one.sample", alt = "one.sided")$power
power.t.test(n = 16, delta = 100, sd = 200, type = "one.sample", alt = "one.sided")$power
power.t.test(power = 0.8, delta = 2/4, sd = 1, type = "one.sample", alt = "one.sided")$n
power.t.test(power = 0.8, n = 16, sd = 1, type = "one.sample", alt = "one.sided")$delta
power.t.test(power = 0.8, n = 26, sd = 1, type = "one.sample", alt = "one.sided")$delta
power.t.test(power = 0.8, n = 26, sd = 200, type = "one.sample", alt = "one.sided")$delta
setwd("C:/Users/vhasfczouy/Desktop/Coursera/StatisticalInference/StatisticalInference_Project")
mns <- NULL
class(mns)
?rexp
source("BuildPDF.R")
source("BuildPDF.R")
getwd()
source("BuildPDF.R")
install.packages("knitr")
5^2/40
